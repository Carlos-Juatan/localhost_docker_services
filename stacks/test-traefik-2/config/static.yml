# Arquivo: config/static.yml

global:
  sendAnonymousUsage: false # Desabilita envio de uso anônimo (opcional)

api:
  dashboard: true # Habilita o dashboard
  insecure: true # Permite acesso sem autenticação (DEBUG LOCAL) - REMOVER EM PRODUÇÃO

providers:
  docker:
    swarmMode: true # Habilita modo Swarm no provedor Docker
    endpoint: "unix:///var/run/docker.sock" # Caminho do socket Docker (dentro do contêiner)
    exposedByDefault: false # Só roteia serviços com label traefik.enable=true
    network: "network_swarm_public" # O Traefik monitorará esta rede para descobrir serviços (nome da sua rede overlay)
    # Se quiser, pode adicionar watch: true aqui, mas já é padrão se não especificado

  file: # Habilita o provedor de arquivo
    filename: "/etc/traefik/dynamic.yml" # Caminho DENTRO do contêiner para o arquivo dinâmico
    watch: true # Monitora o arquivo dinâmico para recarregar configuração

entryPoints: # Define as portas que o Traefik ouve
  web: # Entrypoint para HTTP
    address: ":80" # Porta interna 80
    http:
      redirections:
        entryPoint:
          to: websecure # Redireciona para o entrypoint websecure
          scheme: https # Usa esquema HTTPS
          permanent: true # Redirecionamento 301 (opcional)

  websecure: # Entrypoint para HTTPS
    address: ":443" # Porta interna 443
    # A configuração TLS para este entrypoint (certificado padrão)
    # pode ir aqui sob 'tls:', ou no dynamic.yml sob 'tls.certificates'.
    # Vamos colocá-la no dynamic.yml, que é onde você definirá seus certificados mkcert.
    # tls: # Se quiser um certificado padrão definido aqui no static.yml
    #   defaultCertificate:
    #     certFile: "/etc/certs/codesefaz.local+9.pem"
    #     keyFile: "/etc/certs/codesefaz.local+9-key.pem"