version: "3.7"
# Definição dos Serviços
services:
  # Definição do Serviço do Editor
  n8n_mcp_api:
    # imagem do docker
    # MCP está disponível da versão 1.88 em diante
    image: n8nio/n8n:1.88.0
    # Define o hotname do container
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"
    # comando padrão para subir o servidor web do editor
    command: webhook
    # configura a rede do serviço
    networks:
      - network_swarm_public
    # configura as variáveis de ambiente
    environment:

    # Configura o Modo de Deploy da Aplicação
    deploy:
      # O editor será executado no modo de replicação
      mode: replicated
      # Vamos ter apenas uma instância do servidor MCP
      replicas: 1
      # Configura o local de execução
      placement:
        constraints:
          # Você pode rodar o Editor no Manager mesmo pois usa poucos recursos
          - node.role == manager
          # - node.hostname == worker1
          # - node.labels.app == http # nome do label: app, valor do label: http
      # Limitação
      resources:
        # Definição dos Limites de Recursos deste Serviço
        limits:
          # Define a quantidade de CPU para o N8N para evitar travamento do Host
          cpus: "1"
          # Define a quantidade de RAM para o N8N para evitar travamento do Host
          memory: 2048M
      # Define os Labels do Serviço
      labels:
        # Habilita o Traefik para este serviço
        - traefik.enable=true
        # Configura um novo Middleware para remover o gzip do N8N
        - traefik.http.middlewares.nogzip.headers.customResponseHeaders.Content-Encoding=""
        #############################################################
        # Configura o Roteamento do Traefik para o MCP
        #############################################################
        # Define o enderço do Webhook do N8N para receber somente o prefixo /mcp
        - traefik.http.routers.n8n_mcp_api.rule=Host(`webhooks.agenciasynca.com.br`) && PathPrefix(`/mcp`)
        # Redireciona o endereço para HTTPS
        - traefik.http.routers.n8n_mcp_api.entrypoints=websecure
        # Define o certificado SSL
        - traefik.http.routers.n8n_mcp_api.tls.certresolver=letsencryptresolver
        # Define o serviço do Editor
        - traefik.http.routers.n8n_mcp_api.service=n8n_mcp_api
        # Define a porta do serviço do Editor
        - traefik.http.services.n8n_mcp_api.loadbalancer.server.port=5678
        # Define o uso do Host Header
        - traefik.http.services.n8n_mcp_api.loadbalancer.passHostHeader=true
        # Adiciona o Middleware no N8N para a API do MCP
        - traefik.http.routers.n8n_mcp_api.middlewares=nogzip
      # Configura o modo de atualização do serviço
      update_config:
        # Configura o paralelismo de atualização
        parallelism: 1
        # Configura o tempo de espera entre as atualizações
        delay: 30s
        # Configura a ação em caso de falha
        order: start-first
        # Configura a ação em caso de falha
        failure_action: rollback
networks:
  network_swarm_public:
    name: network_swarm_public
    external: true
