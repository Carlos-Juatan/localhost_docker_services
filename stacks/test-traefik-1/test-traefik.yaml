version: '3' # Define a versão da sintaxe do arquivo Docker Compose. Versão 3 é compatível com Compose e Swarm, mas este arquivo é estruturado para Compose.

services: # Seção onde definimos os serviços (contêineres) que compõem esta aplicação Compose.
  reverse-proxy: # Define um serviço chamado 'reverse-proxy'.
    container_name: traefik # <--- Nomeia explicitamente o contêiner criado por este serviço como 'traefik'. Típico em Compose, NÃO recomendado em Swarm (impede escalar).
    image: traefik:v2.11.6 # Qual imagem Docker usar para o contêiner Traefik.

    ports: # Publica portas do contêiner para a máquina host.
      # The HTTP port
      - "80:80" # <--- Mapeia a porta 80 da máquina host para a porta 80 interna do contêiner (HTTP).
      - "443:443" # <--- Mapeia a porta 443 da máquina host para a porta 443 interna do contêiner (HTTPS).
      # The Web UI port
      - "8081:8080" # <--- Mapeia a porta 8081 da máquina host para a porta 8080 interna do contêiner (Dashboard/API). Usar 8081 evita conflito se 8080 já estiver em uso na host.

    volumes: # Montagens de volume: conecta caminhos locais/volumes Docker a caminhos dentro do contêiner.
      # Config file
      - /etc/traefik/traefik.yaml:/etc/traefik/traefik.yaml # <--- Monta um arquivo de configuração ESTÁTICA localizado em /etc/traefik/traefik.yaml NA MÁQUINA HOST (ou na VM do Docker Desktop no Windows/Mac) para o mesmo caminho dentro do contêiner. Sugere que a configuração principal está neste arquivo.
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock # <--- Monta o socket do Docker (na máquina host) dentro do contêiner. ESSENCIAL para o Traefik descobrir outros contêineres.
      # For TLS certs not to be re-generated every time...
      - /etc/traefik/certs/acme.json:/acme.json # <--- Monta um arquivo chamado acme.json (localizado em /etc/traefik/certs/ NA MÁQUINA HOST) dentro do contêiner. Este arquivo é usado pelo provedor ACME (Let's Encrypt) do Traefik para armazenar informações sobre os certificados obtidos. Sugere uma configuração ACME/Let's Encrypt.

    networks: # Redes que o serviço se conectará.
      - nginx # <--- Conecta o serviço à rede chamada 'nginx'.

networks: # Define redes para serem usadas neste Compose (apenas se external: true ou se o Compose gerencia a rede).
  nginx: # Define uma rede chamada 'nginx'.
    external: true # <--- Diz ao Compose que esta rede já existe e foi criada externamente (ex: 'docker network create nginx').